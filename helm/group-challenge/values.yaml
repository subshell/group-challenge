replicaCount: 1

image:
  repository: ghcr.io/subshell/group-challenge
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
  #  - host: chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1024Mi

nodeSelector: {}

tolerations: []

affinity: {}

groupChallenge:
  # k8s env variables
  env: {}
  # config for the config.yaml file
  config:
    server:
      port: 8080
      staticFilesDir: "./static"
    db:
      user: postgres
      password: postgres
      database: group_challenge
      host: "gc-postgres:5432"
      poolSize: 50
      logQueries: false
    imgProxy:
      enabled: true
      url: "http://localhost:8081"
      sharedLocalCacheDir: "/tmp/group-challenge-cache"
      thumbnailQuality: 90
      fullSizeQuality: 75
      maxFullWidth: 1280
      maxFullHeight: 1280

imgProxy:
  enabled: true
  image:
    repository: darthsim/imgproxy
    pullPolicy: IfPresent
    tag: "v3.3.3"
  env: {}
  resources: {}

postgresql:
  enabled: true
  fullnameOverride: gc-postgres
  auth:
    database: "group_challenge"
    enablePostgresUser: true
    postgresPassword: postgres
